
Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kind create cluster --image v1.32.0: kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027
ERROR: unknown command "kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027" for "kind create cluster"

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kind create cluster --image kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb0
27
Creating cluster "kind" ...
 • Ensuring node image (kindest/node:v1.32.0) 🖼  ...
 ✓ Ensuring node image (kindest/node:v1.32.0) 🖼
 • Preparing nodes 📦   ...
 ✓ Preparing nodes 📦
 • Writing configuration 📜  ...
 ✓ Writing configuration 📜
 • Starting control-plane 🕹️  ...
 ✓ Starting control-plane 🕹️
 • Installing CNI 🔌  ...
 ✓ Installing CNI 🔌
 • Installing StorageClass 💾  ...
 ✓ Installing StorageClass 💾
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a nice day! 👋

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl cluster-info --context kind-kind
Kubernetes control plane is running at https://127.0.0.1:51558
CoreDNS is running at https://127.0.0.1:51558/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl version --client
Client Version: v1.29.2
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl get nodes
NAME                 STATUS   ROLES           AGE   VERSION
kind-control-plane   Ready    control-plane   13m   v1.32.0

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ vi config.yaml

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ cat congig
cat: congig: No such file or directory

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ cat config
cat: config: No such file or directory

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ cat config.yaml
i
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
  - role: worker
  - role: worker


Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kind create cluster --image kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027 --name kind2 --config config.yaml
ERROR: failed to create cluster: could not determine kind / apiVersion for config: yaml: line 2: mapping values are not allowed in this context

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kind create cluster --image kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027 --name cka-kind2 --config config.yaml
ERROR: failed to create cluster: could not determine kind / apiVersion for config: yaml: line 2: mapping values are not allowed in this context

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ vi config.yaml

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ cat config.yaml
i
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
  - role: worker
  - role: worker


Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ vi config.yaml

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ cat config.yaml

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
  - role: control-plane
  - role: worker
  - role: worker


Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kind create cluster --image kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027 --name cka-kind2 --config config.yaml
Creating cluster "cka-kind2" ...
 • Ensuring node image (kindest/node:v1.32.0) 🖼  ...
 ✓ Ensuring node image (kindest/node:v1.32.0) 🖼
 • Preparing nodes 📦 📦 📦   ...
 ✓ Preparing nodes 📦 📦 📦
 • Writing configuration 📜  ...
 ✓ Writing configuration 📜
 • Starting control-plane 🕹️  ...
 ✓ Starting control-plane 🕹️
 • Installing CNI 🔌  ...
 ✓ Installing CNI 🔌
 • Installing StorageClass 💾  ...
 ✓ Installing StorageClass 💾
 • Joining worker nodes 🚜  ...
 ✓ Joining worker nodes 🚜
Set kubectl context to "kind-cka-kind2"
You can now use your cluster with:

kubectl cluster-info --context kind-cka-kind2

Not sure what to do next? 😅  Check out https://kind.sigs.k8s.io/docs/user/quick-start/


Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl cluster-info --context kind-cka-kind2
Kubernetes control plane is running at https://127.0.0.1:52170
CoreDNS is running at https://127.0.0.1:52170/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl get nodes
NAME                      STATUS   ROLES           AGE     VERSION
cka-kind2-control-plane   Ready    control-plane   3m6s    v1.32.0
cka-kind2-worker          Ready    <none>          2m43s   v1.32.0
cka-kind2-worker2         Ready    <none>          2m43s   v1.32.0

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl config get-contexts
CURRENT   NAME                CLUSTER             AUTHINFO            NAMESPACE
          kind-cka-cluster1   kind-cka-cluster1   kind-cka-cluster1
*         kind-cka-kind2      kind-cka-kind2      kind-cka-kind2
          kind-kind           kind-kind           kind-kind

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl config use-context kind-cka-cluster1
Switched to context "kind-cka-cluster1".

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl config get-contexts
CURRENT   NAME                CLUSTER             AUTHINFO            NAMESPACE
*         kind-cka-cluster1   kind-cka-cluster1   kind-cka-cluster1
          kind-cka-kind2      kind-cka-kind2      kind-cka-kind2
          kind-kind           kind-kind           kind-kind

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl get nodes
NAME                         STATUS   ROLES           AGE   VERSION
cka-cluster1-control-plane   Ready    control-plane   80d   v1.31.0

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl config use-context kind-cka-kind2
Switched to context "kind-cka-kind2".

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$ kubectl get nodes
NAME                      STATUS   ROLES           AGE   VERSION
cka-kind2-control-plane   Ready    control-plane   11m   v1.32.0
cka-kind2-worker          Ready    <none>          11m   v1.32.0
cka-kind2-worker2         Ready    <none>          11m   v1.32.0

Kanika Kushwaha@DESKTOP-0GIN93H MINGW32 /d/Docker-Aks/Day6 (main)
$